name: RustZX CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: "Build (${{ matrix.os }}-${{ matrix.arch }})"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            os_name: linux
            executable_suffix: ""
            arch: amd64
          - os: windows-2019
            os_name: windows
            executable_suffix: ".exe"
            arch: amd64
          - os: macos-10.15
            os_name: macos
            executable_suffix: ""
            arch: amd64
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-features -- -D warnings
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --workspace --all-features --verbose
      - name: Build(rustzx-core) - Minimal
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release -p rustzx-core --verbose
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --verbose
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "rustzx-bin-${{ matrix.os_name }}-${{ matrix.arch }}"
          path: |
            target/release/rustzx${{ matrix.executable_suffix }}
            target/release/vtx${{ matrix.executable_suffix }}
